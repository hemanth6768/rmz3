// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RMZ.Context;

namespace RMZ.Migrations
{
    [DbContext(typeof(RMZContext))]
    partial class RMZContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("RMZ.MODEL.Building", b =>
                {
                    b.Property<int>("Bid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("BuildingName")
                        .HasColumnType("text");

                    b.Property<int?>("FacilityId")
                        .HasColumnType("integer");

                    b.HasKey("Bid");

                    b.HasIndex("FacilityId");

                    b.ToTable("buildings");
                });

            modelBuilder.Entity("RMZ.MODEL.City", b =>
                {
                    b.Property<int>("Cityid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("CityName")
                        .HasColumnType("text");

                    b.HasKey("Cityid");

                    b.ToTable("city");
                });

            modelBuilder.Entity("RMZ.MODEL.Facility", b =>
                {
                    b.Property<int>("FacilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("Cityid")
                        .HasColumnType("integer");

                    b.Property<string>("Facilityname")
                        .HasColumnType("text");

                    b.HasKey("FacilityId");

                    b.HasIndex("Cityid");

                    b.ToTable("facility");
                });

            modelBuilder.Entity("RMZ.MODEL.Zone", b =>
                {
                    b.Property<string>("ZoneId")
                        .HasColumnType("text");

                    b.Property<int?>("BuildingBid")
                        .HasColumnType("integer");

                    b.Property<decimal>("Eletricmeter")
                        .HasColumnType("numeric");

                    b.Property<int?>("FacilityId")
                        .HasColumnType("integer");

                    b.Property<string>("Floornumber")
                        .HasColumnType("text");

                    b.Property<decimal>("watermeteer")
                        .HasColumnType("numeric");

                    b.HasKey("ZoneId");

                    b.HasIndex("BuildingBid");

                    b.HasIndex("FacilityId");

                    b.ToTable("zones");
                });

            modelBuilder.Entity("RMZ.MODEL.Building", b =>
                {
                    b.HasOne("RMZ.MODEL.Facility", "Facility")
                        .WithMany("buildings")
                        .HasForeignKey("FacilityId");

                    b.Navigation("Facility");
                });

            modelBuilder.Entity("RMZ.MODEL.Facility", b =>
                {
                    b.HasOne("RMZ.MODEL.City", "City")
                        .WithMany("facilities")
                        .HasForeignKey("Cityid");

                    b.Navigation("City");
                });

            modelBuilder.Entity("RMZ.MODEL.Zone", b =>
                {
                    b.HasOne("RMZ.MODEL.Building", "Building")
                        .WithMany("zones")
                        .HasForeignKey("BuildingBid");

                    b.HasOne("RMZ.MODEL.Facility", "Facility")
                        .WithMany()
                        .HasForeignKey("FacilityId");

                    b.Navigation("Building");

                    b.Navigation("Facility");
                });

            modelBuilder.Entity("RMZ.MODEL.Building", b =>
                {
                    b.Navigation("zones");
                });

            modelBuilder.Entity("RMZ.MODEL.City", b =>
                {
                    b.Navigation("facilities");
                });

            modelBuilder.Entity("RMZ.MODEL.Facility", b =>
                {
                    b.Navigation("buildings");
                });
#pragma warning restore 612, 618
        }
    }
}
